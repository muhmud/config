# don't rename windows automatically
# set-option -g allow-rename off

# window titles
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string "#T (#S:#I.#P)"

# set-window-option -g xterm-keys
set -s escape-time 0

# default shell
set-option -g default-shell /bin/zsh

# history
set-option -g history-limit 10000

# mouse
set -g mouse on

# don't try to copy to the clipboard
set -g set-clipboard off

# copy/paste integration
bind-key -T copy-mode y send-keys -X copy-pipe 'xclip -in -selection clipboard'
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

unbind-key MouseDown3Pane
bind-key -n MouseDown3Pane run "tmux set-buffer \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

# copy mode keys
bind-key -T copy-mode C-Left send-keys -X previous-word
bind-key -T copy-mode C-Right send-keys -X next-word-end
bind-key -T copy-mode C-Home send-keys -X history-top
bind-key -T copy-mode C-End send-keys -X history-bottom

bind-key -T copy-mode S-Home send-keys C-Space Home
bind-key -T copy-mode S-End send-keys C-Space End

bind-key -T copy-mode S-Right send-keys C-Space Right
bind-key -T copy-mode S-Left send-keys C-Space Left
bind-key -T copy-mode S-Up send-keys C-Space Up
bind-key -T copy-mode S-Down send-keys C-Space Down

bind-key -T copy-mode o send-keys -X clear-selection
bind-key -T copy-mode t send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# key bindings

# flip status locally
bind-key -n M-s set status

# new window
bind -n M-n new-window -c "#{pane_current_path}"

# list windows
bind -n M-w choose-tree -Zw

# kill window
bind -n M-x kill-window

# find
bind -n M-f command-prompt "find-window -- '%%'"

# choose window
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :0

# rename window
bind-key -n M-R command-prompt -I "" "rename-window '%%'"

# split panes
bind -n M-h split-window
bind -n M-v split-window -h

# resize pane
bind-key -n M-f resize-pane -Z

# flip mouse mode locally
bind -n M-S-M set mouse

# other keys

# remap prefix from 'C-b' to 'C-a'
set -s user-keys[0] "\e[3;5~"  # Ctrl+Delete
unbind C-b
set-option -g prefix User0
bind-key User0 send-prefix

# switch windows
set -s user-keys[1] "\e[1;3D"  # Alt+Left
set -s user-keys[2] "\e[1;3C"  # Alt+Right
bind -n User1 previous-window
bind -n User2 next-window

# shift windows
set -s user-keys[3] "\e[1;4D"  # Alt+Shift+Left
set -s user-keys[4] "\e[1;4C"  # Alt+Shift+Right
bind -n User3 swap-window -t -1 \; previous-window
bind -n User4 swap-window -t +1 \; next-window

# resize panes
set -s user-keys[5] "\e[1;3B"  # Alt+Down
set -s user-keys[6] "\e[1;3A"  # Alt+Up
bind -n User5 resize-pane -D
bind -n User6 resize-pane -U

# last window
set -s user-keys[7] "\e[1;Z"  # Ctrl+Tab
bind -n User7 last-window

# activate copy (alternate)
set -s user-keys[8] "\e[1111{"  # Ctrl+0
bind -n User8 copy-mode

# switch panes
set -s user-keys[9] "\e[1;5A"  # Ctrl+Up
set -s user-keys[10] "\e[1;5B"  # Ctrl+Down
bind -n User9 select-pane -t :.+
bind -n User10 select-pane -t :.+

# swap panes
set -s user-keys[11] "\e[1;4B"  # Alt+Shift+Down
set -s user-keys[12] "\e[1;4A"  # Alt+Shift+Up
bind -n User11 swap-pane -D
bind -n User12 swap-pane -U

# alternative zoom pane
set -s user-keys[14] "\e[6;5~"  # Ctrl+PageDown
bind -n User14 resize-pane -Z

# mouse scroll
set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
run-shell ~/.config/tmux/plugins/tmux-better-mouse-mode/scroll_copy_mode.tmux

# default terminal
set -g default-terminal "st-256color"

# No delay for escape key press
set -sg escape-time 0

######################
### DESIGN CHANGES ###
######################

# panes
set -g pane-border-style "fg=black bg=magenta"
set -g pane-active-border-style "bg=default fg=brightred"

## Status bar design
# set -g status off

# status line
set -g status-justify left
set -g status-bg default
set -g status-fg colour12
set -g status-interval 2

# messaging
set -g message-style fg=black,bg=yellow
set -g message-command-style fg=blue,bg=black

#window mode
setw -g mode-style bg=colour6,fg=colour0

# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
setw -g window-status-current-style dim,bg=colour0,fg=colour11
setw -g window-status-style reverse,bg=green,fg=black

# Info on left (I don't have a session display for now)
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# The modes {
setw -g clock-mode-colour colour135
setw -g mode-style bold,fg=colour196,bg=colour238

# }
# The panes {

set -g pane-border-style bg=colour235,fg=colour238
set -g pane-active-border-style bg=colour236,fg=colour51

# }
# The statusbar {

set -g status-position bottom
set -g status-style dim,bg=colour234,fg=colour137
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold]#{?client_prefix,#[reverse]<P>#[noreverse],}'
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style bold,fg=colour81,bg=colour238
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style none,fg=colour138,bg=colour235
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style bold,fg=colour255,bg=colour1

# }
# The messages {

set -g message-style bold,fg=colour232,bg=colour166

# }
